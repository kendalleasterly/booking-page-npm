[{"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js":"1","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js":"2","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js":"3","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/GoogleSignIn.js":"4","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js":"5","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/SubmitButton.js":"6","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js":"7","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js":"8","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js":"9","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/CheckoutForm.js":"10","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/FirebaseAdd.js":"11"},{"size":502,"mtime":1609718941065,"results":"12","hashOfConfig":"13"},{"size":1165,"mtime":1610725929734,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1609709034299,"results":"15","hashOfConfig":"13"},{"size":376,"mtime":1609711569546,"results":"16","hashOfConfig":"13"},{"size":2087,"mtime":1610729152267,"results":"17","hashOfConfig":"13"},{"size":1091,"mtime":1610428404205,"results":"18","hashOfConfig":"13"},{"size":6179,"mtime":1610726131606,"results":"19","hashOfConfig":"13"},{"size":2210,"mtime":1610729481129,"results":"20","hashOfConfig":"13"},{"size":999,"mtime":1610726667393,"results":"21","hashOfConfig":"13"},{"size":3610,"mtime":1610730828539,"results":"22","hashOfConfig":"13"},{"size":1150,"mtime":1610729479789,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hu77ci",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js",[],["52","53"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js",["54"],"import GoogleSignIn from \"./Components/GoogleSignIn\"\nimport Book from \"./Views/Book\"\nimport firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\nimport \"tailwindcss/tailwind.css\"\nimport React from \"react\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nimport { useAuthState } from \"react-firebase-hooks/auth\"\n\n\nlet Context = React.createContext()\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: \"AIzaSyCKoM5avYL1KHa5Z19W-OqIGZ6N1mN7_IA\",\n    authDomain: \"east-kickboxing-booking.firebaseapp.com\",\n    projectId: \"east-kickboxing-booking\",\n    storageBucket: \"east-kickboxing-booking.appspot.com\",\n    messagingSenderId: \"378920786387\",\n    appId: \"1:378920786387:web:ff23f67d0096fa4de97726\",\n    measurementId: \"G-RQWW28MLYR\"\n  })\n}\n\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nfunction App() {\n\n  const [user] = useAuthState(auth)\n\n  return (\n    <Router >\n      <link rel=\"stylesheet\" href=\"https://css.gg/css\" />\n      {user ? <Book firestore={firestore} auth={auth} /> : <GoogleSignIn auth={auth} firebase={firebase} />}\n\n      \n    </Router>\n\n\n  );\n}\n\n\nexport default App;\n","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/GoogleSignIn.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js",["55"],"\nimport Calendar from \"./Calendar\"\nimport ClassesAvailable from \"./ClassesAvailable\"\nimport Payment from \"./Payment\"\nimport { useDocumentData } from \"react-firebase-hooks/firestore\"\nimport { Route, Switch } from \"react-router-dom\"\nimport {useState} from \"react\"\n\nclass BookingModel {\n\n    selectedTime = \"\"\n    // willUseAvailableClass = false\n    \n    /* if you have any errors here, it's because when you defined it you used state. So whenvever you changed a value, it\n    didn't update in state. you need to do setModel(model.lkdjfslk = slkdfjs) to get it working correctly. */\n\n}\n\nfunction Book(props) {\n\n    const firestore = props.firestore\n    const auth = props.auth\n    const [model, setModel] = useState(new BookingModel())\n\n    const accountRef = firestore.collection(\"users\").doc(auth.currentUser.uid)\n    const [account] = useDocumentData(accountRef)\n\n    return (\n        <div className=\"bg-gray-50 p-4\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Calendar\n                        firestore={firestore}\n                        auth={auth}\n                        model = {model}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/usefreeclasses\">\n                    <ClassesAvailable\n                        model = {model}\n                        firestore={firestore}\n                        auth={auth}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/payment\">\n                    <Payment\n                        model = {model}\n                        firestore={firestore}\n                        auth={auth}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/success\">\n                    <p>IT WAS A SUCCESS!!!</p>\n                </Route>\n\n            </Switch>\n\n        <GoogleSignOut/>\n\n        </div>\n    )\n\n    function GoogleSignOut() {\n        return (\n            <button onClick={() => props.auth.signOut()}>sign out</button>\n        )\n    }\n}\n\nexport default Book","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/SubmitButton.js",[],["56","57"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js",["58"],"import \"firebase/auth\"\nimport \"firebase/firestore\"\n\nimport React, { useState, useEffect } from 'react'\n\nimport { useCollectionOnce } from \"react-firebase-hooks/firestore\"\nimport { Link } from \"react-router-dom\"\n\nfunction Calendar(props) {\n\n    const firestore = props.firestore\n\n    const classesRef = firestore.collection(\"classes\")\n    const [classes] = useCollectionOnce(classesRef)\n    //if you get an error with this after making it dynamic, it's because you need to add the 0 in 01\n    const currentMonth = \"01\"\n    const [availableDays, setAvailableDays] = useState({})\n    const [selectedDay, setSelectedDay] = useState(new Date().getDate())\n    const daysArray = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\n\n    useEffect(() => {\n\n        if (classes) {\n\n            // read from firebase\n            // make array of days you get\n            // then check if the length of attendees is 8, don't include the number\n\n            let availableDaysDict = {}\n\n            classes.docs.forEach(element => {\n                const id = element.id\n                const timeArray = id.split(\"-\")\n                const month = timeArray[1]\n                const day = parseInt(timeArray[2], 10)\n                const time = timeArray[3] + \"-\" + timeArray[4]\n                const attendeeCount = element.data().attendees.length\n\n\n                if (month === currentMonth && attendeeCount < 9) {\n\n                    availableDaysDict[day] = time\n\n                }\n            });\n\n            setAvailableDays(availableDaysDict)\n\n        }\n\n    }, [classes])\n\n        useEffect(() => {\n            \n            props.model.selectedTime = availableDays[selectedDay]\n\n        }, [selectedDay])\n\n    const getDays = function (year, month) {\n        let numOfDays = new Date(year, month, 0).getDate();\n        let dayArray = []\n\n        let i\n        for (i = 0; i < numOfDays; i++) {\n            dayArray.push(i + 1)\n        }\n        return dayArray\n    };\n\n    const decideOffset = function () {\n        let d = new Date(2021, 0, 1)\n        let offset = d.getDay()\n\n        let offsetArray = []\n        let i\n        for (i = 0; i < offset; i++) {\n            offsetArray.push(i)\n        }\n\n        return offsetArray\n    }\n\n\n    return (\n        <div className=\"font-bold text-xl space-y-8 \">\n            <div className=\"card grid gap-7 grid-cols-7 text-center text-blue-500 \">\n                {daysArray.map((element, key) => <p key={key} className=\"text-gray-700\">{element}</p>)}\n\n\n                {decideOffset().map((element, key) => <p key={key}></p>)}\n\n                {getDays(2021, 0).map((element, key) => <Day day={element} key={key} model={props.model} />)}\n\n            </div>\n\n            <InfoCard />\n\n        </div>\n    )\n\n    function Day(props) {\n\n        let disabled = true\n\n        const decideStyling = function () {\n\n            let availableDaysKeys = Object.keys(availableDays)\n            let string = props.day + \"\"\n\n            if (selectedDay === props.day) {\n\n                if (availableDaysKeys.includes(string)) {\n                    disabled = false\n                    return \"text-white font-bold w-8 h-8 bg-blue-500 rounded-full\"\n                } else {\n                    disabled = true\n                    return \"text-white font-bold w-8 h-8 bg-gray-300 rounded-full\"\n                    //TODO: add a feature that makes sure if a day has already passed, it is disabled.\n                }\n\n            } else if (availableDaysKeys.includes(string)) {\n                disabled = false\n                return \"font-bold text-blue-500 w-8 h-8\"\n            } else {\n                return \"font-bold text-gray-300 w-8 h-8\"\n\n            }\n\n        }\n\n        const changeSelectedDay = function () {\n            \n            \n            setSelectedDay(props.day)\n\n\n        }\n\n\n        if (disabled) {\n            return (\n                <button onClick={changeSelectedDay} className={decideStyling()} disabled={disabled}>{props.day}</button>\n            )\n        } else {\n            return (\n                <button onClick={changeSelectedDay} className={decideStyling()} >{props.day}</button>\n            )\n        }\n\n    }\n\n    function InfoCard() {\n\n        let element = <i className=\"font-normal mx-auto\">Sorry, there are no classes for this day. Please select an available day.</i>\n        let account = props.account\n\n        const formatTime = function (time) {\n            let splitTime = time.split(\"-\")\n            let hour = parseInt(splitTime[0], 10)\n            let minute = splitTime[1]\n\n            return hour + \":\" + minute\n        }\n\n        const decideNextStep = function () {\n            console.log(account)\n            if (account.freeClasses > 0) {\n\n                return \"/usefreeclasses\"\n            } else {\n                return \"/payment\"\n            }\n        }\n\n\n        let availableDaysKeys = Object.keys(availableDays)\n        let string = selectedDay + \"\"\n\n        if (availableDaysKeys.includes(string)) {\n\n            let time = availableDays[string]\n\n            element =\n                <div className=\"card text-left text-gray-900 space-y-4\">\n                    <p className=\"float-right text-lg font-normal text-gray-400\">January {selectedDay}</p>\n\n                    <div>\n                        <p className=\"text-lg text-gray-400\">Time</p>\n                        <p>{formatTime(time)}</p>\n                    </div>\n\n                    <div>\n                        <p className=\"text-lg text-gray-400\">Teacher</p>\n                        <p className=\"mb-5\">Jason Easterly</p>\n                    </div>\n\n                    <Link to={decideNextStep()}>\n                        <p className=\"font-bold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5\">Next</p>\n                    </Link>\n\n                </div>\n\n        }\n\n        //first, get the current selected day. If you can find it in the availableDays dictionary, \n        //then format the time value using a function and put the return of it and add it to it's dom element\n        //put the day in it's dom element using the variable\n        return (\n            element\n        )\n    }\n\n\n}\n\nexport default Calendar","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js",["59"],"import { loadStripe } from '@stripe/stripe-js'\nimport React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"../Components/CheckoutForm\"\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\nconst promise = loadStripe(\"pk_test_51I68DAF7CJHF9XyiIrrANxfLPdD7jJcTuFpdVnOzVeS5ePbc0NRaXQPCT40A0sYiCYzUula7PlyyXhcAGb24Pp2400HHOo54rE\");\n\nexport default function Payment(props) {\n\n  const history = useHistory()\n  const model = props.model\n\n  if (model.selectedTime === \"\") {\n    history.push(\"/\")\n\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <Elements stripe={promise}>\n        <CheckoutForm\n          firestore={props.firestore}\n          auth={props.auth}\n          account={props.account}\n          model={model} />\n      </Elements>\n    </div>\n  );\n}\n","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/CheckoutForm.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/FirebaseAdd.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":5,"nodeType":"66","messageId":"67","endLine":13,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":23,"column":19,"nodeType":"66","messageId":"67","endLine":23,"endColumn":27},{"ruleId":"60","replacedBy":"69"},{"ruleId":"62","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":57,"column":12,"nodeType":"73","endLine":57,"endColumn":25,"suggestions":"74"},{"ruleId":"64","severity":1,"message":"75","line":2,"column":17,"nodeType":"66","messageId":"67","endLine":2,"endColumn":26},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Context' is assigned a value but never used.","Identifier","unusedVar","'setModel' is assigned a value but never used.",["76"],["77"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'availableDays' and 'props.model'. Either include them or remove the dependency array.","ArrayExpression",["78"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [availableDays, props.model, selectedDay]",{"range":"81","text":"82"},[1672,1685],"[availableDays, props.model, selectedDay]"]