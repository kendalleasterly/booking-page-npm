[{"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js":"1","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js":"2","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js":"3","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/GoogleSignIn.js":"4","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js":"5","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/SubmitButton.js":"6","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js":"7","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js":"8","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js":"9"},{"size":502,"mtime":1609718941065,"results":"10","hashOfConfig":"11"},{"size":1157,"mtime":1610332166913,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609709034299,"results":"13","hashOfConfig":"11"},{"size":376,"mtime":1609711569546,"results":"14","hashOfConfig":"11"},{"size":1934,"mtime":1610333845065,"results":"15","hashOfConfig":"11"},{"size":1311,"mtime":1609827453498,"results":"16","hashOfConfig":"11"},{"size":6660,"mtime":1610063646577,"results":"17","hashOfConfig":"11"},{"size":2000,"mtime":1610333913869,"results":"18","hashOfConfig":"11"},{"size":1155,"mtime":1609866986729,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hu77ci",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js",[],["41","42"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js",["43"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/GoogleSignIn.js",[],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js",["44","45","46","47","48","49","50","51"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/SubmitButton.js",["52","53","54","55"],"import firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nimport {useCollectionOnce, useDocumentOnce, useDocumentDataOnce, useDocumentData} from \"react-firebase-hooks/firestore\"\n\nimport React from 'react'\n\n\nfunction SubmitButton(props) {\n\n    //if you have trouble with this it's because you didn't pass it in\n    const auth = props.auth\n    const firestore = props.firestore\n    const bookingsRef = firestore.collection(\"bookings\")\n    const accountRef = firestore.collection(\"users\").doc(auth.currentUser.uid)\n    const classRef = firestore.collection(\"classes\").doc(props.time)\n\n    // const bookings = useCollectionOnce(bookingsRef)\nconst account = props.account\n\n    const createEvent = function() {\n        bookingsRef.add({\n            time: props.time,\n            userID: auth.currentUser.uid\n        })\n\n        if (account.freeClasses > 0) {\n            accountRef.update({\n                freeClasses: firebase.firestore.FieldValue.increment(-1)\n            })\n        }\n\n        classRef.update({\n            attendees: firebase.firestore.FieldValue.arrayUnion(auth.currentUser.uid)\n        })\n    }\n\n    return (\n\n\n            <button onClick = {createEvent} className=\"bg-blue-500 rounded-3xl text-white\">{props.text}</button>\n\n\n    )\n}\n\nexport default SubmitButton\n","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js",["56","57","58","59","60","61","62","63","64","65","66"],"import firebase from \"firebase/app\"\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nimport React, { useState, useEffect } from 'react'\n\nimport SubmitButton from \"../Components/SubmitButton\"\nimport { useCollectionOnce, useDocumentData } from \"react-firebase-hooks/firestore\"\n\n\nlet Context = React.createContext()\n\nfunction Calendar(props) {\n\n    const firestore = props.firestore\n    const auth = props.auth\n\n    const classesRef = firestore.collection(\"classes\")\n    const [classes, cloading, cerror] = useCollectionOnce(classesRef)\n    //if you get an error with this after making it dynamic, it's because you need to add the 0 in 01\n    const currentMonth = \"01\"\n    const [error, setError] = useState(false)\n    const [availableDays, setAvailableDays] = useState({})\n    const [selectedDay, setSelectedDay] = useState(new Date().getDate())\n    const daysArray = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\n\n    useEffect(() => {\n\n        if (classes) {\n\n            // read from firebase\n            // make array of days you get\n            // then check if the length of attendees is 8, don't include the number\n\n            let availableDaysDict = {}\n\n            classes.docs.forEach(element => {\n                const id = element.id\n                const timeArray = id.split(\"-\")\n                const month = timeArray[1]\n                const day = parseInt(timeArray[2], 10)\n                const time = timeArray[3] + \"-\" + timeArray[4]\n                const attendeeCount = element.data().attendees.length\n\n\n                if (month === currentMonth && attendeeCount < 9) {\n\n                    availableDaysDict[day] = time\n\n                }\n            });\n\n            setAvailableDays(availableDaysDict)\n            let keys = Object.keys(availableDays)\n            console.log(keys)\n\n        }\n\n    }, [classes])\n\n    const getDays = function (year, month) {\n        let numOfDays = new Date(year, month, 0).getDate();\n        let dayArray = []\n\n        let i\n        for (i = 0; i < numOfDays; i++) {\n            dayArray.push(i + 1)\n        }\n        return dayArray\n    };\n\n    const decideOffset = function () {\n        let d = new Date(2021, 0, 1)\n        let offset = d.getDay()\n\n        let offsetArray = []\n        let i\n        for (i = 0; i < offset; i++) {\n            offsetArray.push(i)\n        }\n\n        return offsetArray\n    }\n\n\n    return (\n        <div className=\"font-bold text-xl space-y-8 mx-auto\">\n            <div className=\"rounded-3xl bg-white grid gap-7 max-w-sm grid-cols-7 text-center text-blue-500 p-7 shadow-md\">\n                {daysArray.map((element, key) => <p key={key} className=\"text-gray-700\">{element}</p>)}\n\n\n                {decideOffset().map((element, key) => <p key={key}></p>)}\n\n                {getDays(2021, 0).map((element, key) => <Day day={element} key={key}/>)}\n\n            </div>\n\n            <InfoCard/>\n\n        </div>\n    )\n\n    function Day(props) {\n\n        let disabled = true\n\n        const decideStyling = function () {\n\n            let availableDaysKeys = Object.keys(availableDays)\n            let string = props.day + \"\"\n\n            if (selectedDay === props.day) {\n\n                if (availableDaysKeys.includes(string)) {\n                    disabled = false\n                    return \"text-white font-bold w-8 h-8 bg-blue-500 rounded-full\"\n                } else {\n                    disabled = true\n                    return \"text-white font-bold w-8 h-8 bg-gray-300 rounded-full\"\n                }\n\n            } else if (availableDaysKeys.includes(string)) {\n                disabled = false\n                return \"font-bold text-blue-500 w-8 h-8\"\n            } else {\n                return \"font-bold text-gray-300 w-8 h-8\"\n\n            }\n\n        }\n\n        const changeSelectedDay = function () {\n\n            setSelectedDay(props.day)\n        }\n\n\n        if (disabled) {\n            return (\n                <button onClick={changeSelectedDay} className={decideStyling()} disabled={disabled}>{props.day}</button>\n            )\n        } else {\n            return (\n                <button onClick={changeSelectedDay} className={decideStyling()} >{props.day}</button>\n            )\n        }\n\n    }\n\n    function InfoCard() {\n\n        let element = <i className = \"font-normal mx-auto\">Sorry, there are no classes for this day. Please select an available day.</i>\n        let account = props.account\n\n        useEffect(() => {\n            \n            if(account) {\n                console.log(account)\n            }\n\n        }, [account])\n\n        const formatDate = function () {\n            const year = \"2021\"\n            const month = \"01\"\n            const day = \"03\"\n            const time = \"07-45\"\n\n            return year + \"-\" + month + \"-\" + day + \"-\" + time\n        }\n\n        const formatTime = function(time) {\n            let splitTime = time.split(\"-\")\n            let hour = parseInt(splitTime[0], 10)\n            let minute = splitTime[1]\n\n            return hour + \":\" + minute\n        }\n\n        const decideNextStep = function() {\n            if (account.freeClasses > 0) {\n                console.log(1)\n                return 1\n            } else {\n                console.log(2)\n                return 2\n            }\n            \n        }\n\n\n        let availableDaysKeys = Object.keys(availableDays)\n        let string = selectedDay + \"\"\n\n        if (availableDaysKeys.includes(string)) {\n\n            let time = availableDays[string]\n\n            element = \n            <div className=\"rounded-3xl  bg-white max-w-sm text-left p-7 text-gray-900 space-y-4 shadow-md\">\n                <p className=\"float-right text-lg font-normal text-gray-400\">January {selectedDay}</p>\n\n                <div>\n                    <p className=\"text-lg text-gray-400\">Time</p>\n                    <p>{formatTime(time)}</p>\n                </div>\n\n                <div>\n                    <p className=\"text-lg text-gray-400\">Teacher</p>\n                    <p className=\"mb-5\">Jason Easterly</p>\n                </div>\n\n                <button onClick = {() => {props.setStep(decideNextStep())}} className=\"font-bold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5\">Next</button>\n                {/* <SubmitButton time={formatDate()} /> */}\n\n            </div>\n            \n        }\n\n        //first, get the current selected day. If you can find it in the availableDays dictionary, \n        //then format the time value using a function and put the return of it and add it to it's dom element\n        //put the day in it's dom element using the variable\n        return (\n            element\n        )\n    }\n\n\n}\n\nexport default Calendar","/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js",["67","68","69","70","71"],"/Users/kendalleasterly/OneDrive/Hobbies/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":13,"column":5,"nodeType":"78","messageId":"79","endLine":13,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"81","line":2,"column":20,"nodeType":"78","messageId":"79","endLine":2,"endColumn":28},{"ruleId":"76","severity":1,"message":"82","line":2,"column":30,"nodeType":"78","messageId":"79","endLine":2,"endColumn":39},{"ruleId":"76","severity":1,"message":"83","line":14,"column":11,"nodeType":"78","messageId":"79","endLine":14,"endColumn":18},{"ruleId":"76","severity":1,"message":"84","line":17,"column":21,"nodeType":"78","messageId":"79","endLine":17,"endColumn":29},{"ruleId":"76","severity":1,"message":"85","line":17,"column":31,"nodeType":"78","messageId":"79","endLine":17,"endColumn":37},{"ruleId":"76","severity":1,"message":"86","line":20,"column":9,"nodeType":"78","messageId":"79","endLine":20,"endColumn":22},{"ruleId":"76","severity":1,"message":"87","line":56,"column":14,"nodeType":"78","messageId":"79","endLine":56,"endColumn":27},{"ruleId":"76","severity":1,"message":"88","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":26},{"ruleId":"76","severity":1,"message":"89","line":5,"column":28,"nodeType":"78","messageId":"79","endLine":5,"endColumn":43},{"ruleId":"76","severity":1,"message":"90","line":5,"column":45,"nodeType":"78","messageId":"79","endLine":5,"endColumn":64},{"ruleId":"76","severity":1,"message":"91","line":5,"column":66,"nodeType":"78","messageId":"79","endLine":5,"endColumn":81},{"ruleId":"76","severity":1,"message":"92","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":16},{"ruleId":"76","severity":1,"message":"93","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":20},{"ruleId":"76","severity":1,"message":"91","line":8,"column":29,"nodeType":"78","messageId":"79","endLine":8,"endColumn":44},{"ruleId":"76","severity":1,"message":"77","line":11,"column":5,"nodeType":"78","messageId":"79","endLine":11,"endColumn":12},{"ruleId":"76","severity":1,"message":"94","line":16,"column":11,"nodeType":"78","messageId":"79","endLine":16,"endColumn":15},{"ruleId":"76","severity":1,"message":"95","line":19,"column":21,"nodeType":"78","messageId":"79","endLine":19,"endColumn":29},{"ruleId":"76","severity":1,"message":"96","line":19,"column":31,"nodeType":"78","messageId":"79","endLine":19,"endColumn":37},{"ruleId":"76","severity":1,"message":"97","line":22,"column":12,"nodeType":"78","messageId":"79","endLine":22,"endColumn":17},{"ruleId":"76","severity":1,"message":"98","line":22,"column":19,"nodeType":"78","messageId":"79","endLine":22,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":59,"column":8,"nodeType":"101","endLine":59,"endColumn":17,"suggestions":"102"},{"ruleId":"76","severity":1,"message":"103","line":163,"column":15,"nodeType":"78","messageId":"79","endLine":163,"endColumn":25},{"ruleId":"76","severity":1,"message":"104","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"88","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":27},{"ruleId":"76","severity":1,"message":"91","line":5,"column":29,"nodeType":"78","messageId":"79","endLine":5,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":17,"column":9,"nodeType":"107","messageId":"108","endLine":26,"endColumn":10},{"ruleId":"109","severity":1,"message":"110","line":32,"column":33,"nodeType":"111","messageId":"112","endLine":32,"endColumn":35},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Context' is assigned a value but never used.","Identifier","unusedVar","'useCollectionData' is defined but never used.","'setState' is defined but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'aloading' is assigned a value but never used.","'aerror' is assigned a value but never used.","'stepComponent' is assigned a value but never used.","'GoogleSignOut' is defined but never used.","'useCollectionOnce' is defined but never used.","'useDocumentOnce' is defined but never used.","'useDocumentDataOnce' is defined but never used.","'useDocumentData' is defined but never used.","'firebase' is defined but never used.","'SubmitButton' is defined but never used.","'auth' is assigned a value but never used.","'cloading' is assigned a value but never used.","'cerror' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'availableDays'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'formatDate' is assigned a value but never used.","'useState' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [availableDays, classes]",{"range":"118","text":"119"},[1820,1829],"[availableDays, classes]"]