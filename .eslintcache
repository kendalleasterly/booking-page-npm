[{"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js":"1","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js":"2","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js":"3","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Global/firebase.js":"4","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ChooseSignIn.js":"5","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Main.js":"6","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Global/atoms.js":"7","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailContainer.js":"8","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js":"9","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Products.js":"10","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Home.js":"11","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/NotFound.js":"12","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/Header.js":"13","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailSignUp.js":"14","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js":"15","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js":"16","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailSignIn.js":"17","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js":"18","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/BackButton.js":"19","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/FirebaseAdd.js":"20","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/CheckoutForm.js":"21","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/EmailSubmit.js":"22","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/PaymentModes.js":"23"},{"size":576,"mtime":1615744741221,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609709034000,"results":"26","hashOfConfig":"25"},{"size":2585,"mtime":1625102794215,"results":"27","hashOfConfig":"25"},{"size":626,"mtime":1615744741215,"results":"28","hashOfConfig":"25"},{"size":1576,"mtime":1615744741219,"results":"29","hashOfConfig":"25"},{"size":2961,"mtime":1617234821180,"results":"30","hashOfConfig":"25"},{"size":214,"mtime":1617241632879,"results":"31","hashOfConfig":"25"},{"size":661,"mtime":1615744741219,"results":"32","hashOfConfig":"25"},{"size":1893,"mtime":1625157335473,"results":"33","hashOfConfig":"25"},{"size":3022,"mtime":1615744741221,"results":"34","hashOfConfig":"25"},{"size":2030,"mtime":1611597425000,"results":"35","hashOfConfig":"25"},{"size":283,"mtime":1613265976000,"results":"36","hashOfConfig":"25"},{"size":11013,"mtime":1625156385397,"results":"37","hashOfConfig":"25"},{"size":3571,"mtime":1625102794219,"results":"38","hashOfConfig":"25"},{"size":8131,"mtime":1625763339869,"results":"39","hashOfConfig":"25"},{"size":2821,"mtime":1617500303283,"results":"40","hashOfConfig":"25"},{"size":3042,"mtime":1615744741219,"results":"41","hashOfConfig":"25"},{"size":1499,"mtime":1618255936090,"results":"42","hashOfConfig":"25"},{"size":259,"mtime":1610732325000,"results":"43","hashOfConfig":"25"},{"size":3210,"mtime":1625761989480,"results":"44","hashOfConfig":"25"},{"size":5070,"mtime":1625102794216,"results":"45","hashOfConfig":"25"},{"size":1949,"mtime":1625102794218,"results":"46","hashOfConfig":"25"},{"size":1001,"mtime":1611705599000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"zo3152",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/index.js",[],["106","107"],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/reportWebVitals.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/App.js",["108"],"import \"tailwindcss/tailwind.css\"\nimport React, { useEffect, useState } from \"react\"\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\"\n\nimport { Helmet, HelmetProvider } from \"react-helmet-async\"\n\nimport {auth, firestore} from \"./Global/firebase\"\n\nimport Main from \"./Views/Main\"\nimport ChooseSignIn from \"./Views/ChooseSignIn\"\nimport axios from \"axios\"\n\n// const serverURL = \"http://localhost:4000\"\nconst serverURL = \"https://east-kickboxing-club.herokuapp.com\"\n\nfunction App() {\n\n  const history = useHistory()\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n\n\n      if (user) {\n        setIsSignedIn(true)\n      } else {\n        setIsSignedIn(false)\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n\n    auth.getRedirectResult()\n      .then((result) => {\n\n        var user = result.user;\n\n        if (user) {\n          const uid = user.uid\n          const userRef = firestore.collection(\"users\").doc(uid)\n\n          userRef.get()\n            .then(async (snapshot) => {\n              if (!snapshot.exists) {\n                console.log(\"snapshot didn't exist\")\n                const newStripeUser = await axios.post(serverURL + \"/create-stripe-customer\", {\n                    name: user.displayName,\n                    email: user.email,\n                    uid: user.uid\n                })\n\n                userRef.set({\n                  name: user.displayName,\n                  email: user.email,\n                  freeClasses: 0,\n                  isMember: false,\n                  daysLeft: -1,\n                  stripeCustomerID: newStripeUser.data.id\n                })\n              } else {\n                console.log(\"snapshot didn't exist\")\n              }\n            })\n        }\n      }).catch((err) => {\n\n        history.push(\"/error\")\n        console.log(\"We're sorry, but there was an error signing you in. Please contact support@eastkickboxingclub.com:\", err.message)\n        \n      })\n  }, [])\n\n  //you have two different routes that you can control. what needs to happen is that when you sign in, app.js needs to get that \n  //and upload the user's new information.\n  return (\n    <HelmetProvider>\n\n      <Router className=\"z-50\">\n        <link rel=\"stylesheet\" href=\"https://css.gg/css\" />\n\n        <Helmet>\n          <style>{'body { background-color: #FAFAFA;; }'}</style>\n        </Helmet>\n\n        {isSignedIn ? <Main /> : <ChooseSignIn />}\n        {/* {user ? <Main /> : < EmailContainer/>} */}\n\n      </Router>\n    </HelmetProvider>\n\n\n  );\n}\n\n\nexport default App;\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Global/firebase.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ChooseSignIn.js",["109","110","111","112"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from \"recoil\"\nimport { chooseSignInStepAtom } from \"../Global/atoms\"\nimport EmailContainer from \"./EmailContainer\"\n\nimport GoogleImage from \"../Images/google.svg\"\nimport Email from \"../Images/mail.svg\"\n\nimport { fb, auth } from \"../Global/firebase\"\n\nfunction ChooseSignIn(props) {\n\n    const [step, setStep] = useRecoilState(chooseSignInStepAtom)\n\n    const signInWithGoogle = () => {\n\n        const provider = new fb.auth.GoogleAuthProvider()\n\n        auth.signInWithRedirect(provider)\n\n    }\n\n    if (step === 0) {\n        return (\n            <div className=\"w-full flex flex-col justify-center items-center h-screen space-y-10\">\n\n                <button onClick={signInWithGoogle} className=\"max-w-xs font-bold rounded-3xl bg-blue-100 text-center text-white w-full py-1.5 align-middle flex justify-center space-x-4 px-4\">\n                    <img src={GoogleImage} alt=\"\" />\n                    <p className=\"text-blue-500\">Sign in with Google</p>\n                </button>\n\n                <button onClick={() => setStep(1)} className=\"max-w-xs font-bold rounded-3xl bg-indigo-100 text-center text-white w-full py-1.5 align-middle flex justify-center space-x-4 px-4\">\n                    <img src={Email} alt=\"\" />\n                    <p className=\"text-indigo-500\">Sign in with Email</p>\n                </button>\n\n            </div>\n        )\n    } else {\n\n        return (<EmailContainer/>)\n\n    }\n\n}\n\nexport default ChooseSignIn","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Main.js",["113"],"import React from 'react'\nimport Book from \"./Book\"\nimport Products from \"./Products\"\nimport { Route, Switch, useParams } from \"react-router-dom\"\nimport { useDocumentData } from \"react-firebase-hooks/firestore\"\nimport Header from \"../Components/Header\"\nimport NotFound from \"./NotFound\"\nimport Home from \"./Home\"\n\nimport {auth, firestore} from \"../Global/firebase\"\n\nfunction Main(props) {\n\n    const accountRef = firestore.collection(\"users\").doc(auth.currentUser.uid)\n    const [account] = useDocumentData(accountRef)\n\n    const header = <Header\n        firestore={firestore}\n        account={account}\n        auth={auth} />\n\n\n    // const getErrorInfo = function () {\n\n    //     let details = \"\"\n    //     console.log(\"params are\", id)\n    //     if (id) {\n\n    //         switch (id) {\n\n    //             case \"payment\":\n    //                 details = \"An error with our payment servers caused a disruption.\"\n    //                 break\n    //             case \"book\":\n    //                 details = \"An error with our database servers caused a disruption.\"\n    //                 break\n    //             default:\n    //                 break\n    //         }\n    //     }\n\n    //     return details\n\n    // }\n\n    return (\n\n        <div>\n            {/* <div className=\"p-4\"> */}\n\n            {/* </div> */}\n\n\n            <Switch>\n                <Route exact path=\"/\">\n\n                    {/* {header} */}\n                    <Home header={header} />\n\n\n                </Route>\n\n                <Route path=\"/book\">\n                    <div className=\"p-4\">\n                        {header}\n                        <Book\n                            firestore={props.firestore}\n                            auth={props.auth}\n                            account={account} />\n\n                    </div>\n                </Route>\n\n                <Route path=\"/products\">\n                    <div className=\"p-4\">\n                        {header}\n                        <Products\n                            firestore={props.firestore}\n                            auth={props.auth}\n                            account={account} />\n                    </div>\n                </Route>\n\n                <Route path = \"/error\">\n                    <div className=\"p-4\">\n                        {header}\n\n                        <p className=\"text-center font-semibold text-xl italic\">We're sorry, but there was an error. Please try again.\n                            <br /> If the problem persists, contact support@eastkickboxingclub.com for help.</p>\n                        {/* <p className=\"text-l text-center mt-4\">{getErrorInfo()}</p> */}\n\n\n                    </div>\n                </Route>\n\n                <Route>\n                    <div className=\"p-4\">\n                        {header}\n                        <NotFound />\n\n                    </div>\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default Main\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Global/atoms.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailContainer.js",["114"],"import {atom, useRecoilState, useRecoilValue} from \"recoil\"\n\nimport EmailSignUp from \"./EmailSignUp\"\nimport EmailSignIn from \"./EmailSignIn\"\n\nconst stepAtom = atom({\n    key: \"step\",\n    default: 0\n})\n\nfunction EmailContainer() {\n\n    const step = useRecoilValue(stepAtom)\n    let view = <p></p>\n\n    switch (step) {\n        case 0:\n            view = <EmailSignUp stepAtom = {stepAtom}/>\n            break;\n        case 1:\n            view = <EmailSignIn stepAtom = {stepAtom}/>\n            break;\n        default:\n            break;\n    }\n\n    return (\n        <div className = \"p-7\">\n            {view}\n        </div>\n\n    )\n}\n\nexport default EmailContainer\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Book.js",["115"],"import Calendar from \"./Calendar\"\nimport ClassesAvailable from \"./ClassesAvailable\"\nimport Payment from \"./Payment\"\nimport { Route, Switch, useParams } from \"react-router-dom\"\nimport {useState} from \"react\"\n\nimport {auth, firestore} from \"../Global/firebase\"\n\nfunction Book(props) {\n\n    // const [selectedTime, setSelectedTime] = useState(\"\")\n    const account = props.account\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/book\">\n                    <Calendar\n                        firestore={firestore}\n                        auth={auth}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/book/usefreeclasses/:selectedTime\">\n                    <ClassesAvailable\n                        firestore={firestore}\n                        auth={auth}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/book/payment/:selectedTime\">\n                    <Payment\n                        firestore={firestore}\n                        auth={auth}\n                        account={account} />\n                </Route>\n\n                <Route path=\"/book/success/:bookTime\">\n                \n                <BookingSuccess/>\n                </Route>\n\n            </Switch>\n\n        </div>\n    )\n\n    function BookingSuccess(props) {\n        const {bookTime} = useParams()\n\n        let bookDate = new Date()\n        bookDate.setTime(bookTime)\n\n        return (\n            <div>\n                <p className=\"text-center font-semibold text-xl\">Your Payment has gone through, and you have successfuly reserved a spot with us at East Kickboxing Club. Thank You!</p>\n                <p className = \"text-center py-4\">Your class is for {bookDate.toLocaleDateString()} at {bookDate.toLocaleTimeString()}.</p>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Book","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Products.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Home.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/NotFound.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/Header.js",["116"],"import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useTransition, animated } from 'react-spring'\nimport Dollar from \"../Images/dollar.svg\"\nimport Home from \"../Images/home.svg\"\nimport ShoppingCart from \"../Images/shopping-cart.svg\"\nimport CalendarToday from \"../Images/calendar-today.svg\"\nimport CloseIcon from \"../Images/close.svg\"\n\nimport {auth, firestore} from \"../Global/firebase\"\n\nfunction Header(props) {\n\n    const [name, setName] = useState(\"\")\n    const [freeClasses, setFreeClasses] = useState(0)\n    const [showingMenu, setShowingMenu] = useState(false)\n    const [nextClassString, setNextClassString] = useState(\"You have no upcoming classes\")\n    const history = useHistory()\n    const menuTransition = useTransition(showingMenu, null, {\n        from: { position: \"fixed\", opacity: 0, transform: \"translatex(-100%)\" },\n        enter: { opacity: 1, transform: \"translatex(0%)\" },\n        leave: { opacity: 0, transform: \"translatex(-100%)\" }\n\n\n    })\n\n    const maskTransition = useTransition(showingMenu, null, {\n        from: { position: 'fixed', opacity: 0 },\n        enter: { opacity: 0.2 },\n        leave: { opacity: 0 },\n    })\n\n    useEffect(() => {\n\n        if (props.account) {\n            setName(props.account.name)\n            setFreeClasses(props.account.freeClasses)\n        }\n\n    }, [props.account])\n\n\n    const dismissMenu = function () {\n        setShowingMenu(false)\n    }\n\n    const decideCreditInfo = function () {\n\n        if (props.account.isMember) {\n            return \"You have an unlimited amount of classes\"\n        } else if (freeClasses === 1) {\n            return \"You have one class remianing\"\n        } else if (freeClasses === 0) {\n            return \"You have no classes\"\n        } else {\n            return `You have ${freeClasses} classes remaining`\n        }\n\n    }\n\n    const signOut = function () {\n\n        props.auth.signOut()\n        history.push(\"/signin\")\n\n    }\n\n    const getNextClass = function () {\n\n        const now = new Date()\n        const year = now.getFullYear()\n        let month = now.getMonth()\n        let day = now.getDate()\n        let hour = now.getHours()\n        let minute = now.getMinutes()\n\n        const makeIntoDoubleDigits = function (value) {\n            if (value < 10) {\n                return \"0\" + value\n            } else {\n                return value\n            }\n        }\n\n        let currentID = year + \"-\" +\n            makeIntoDoubleDigits(month) + \"-\" +\n            makeIntoDoubleDigits(day) + \"-\" +\n            makeIntoDoubleDigits(hour) + \"-\" +\n            makeIntoDoubleDigits(minute)\n\n        let uid = \"\"\n\n        if (auth.currentUser) {\n            uid = auth.currentUser.uid\n        }\n\n        let queryRef = firestore.collection(\"bookings\")\n            .where(\"userID\", \"==\", uid)\n            .where(\"time\", \">=\", currentID)\n            .orderBy(\"time\")\n\n        queryRef\n            .get()\n            .then(function (querySnapshot) {\n\n                let returnValue = \"You have no upcoming classes\"\n\n                let bookingsArray = []\n\n                querySnapshot.forEach(function (doc) {\n\n                    bookingsArray.push(doc.data())\n\n                })\n\n                if (bookingsArray[0]) {\n\n                    const nextClass = bookingsArray[0].time\n\n                    let nextClassParts = nextClass.split(\"-\")\n\n                    let nextClassDate = new Date(nextClassParts[0],\n                        nextClassParts[1],\n                        nextClassParts[2],\n                        nextClassParts[3],\n                        nextClassParts[4])\n\n\n                    const nextClassTime = nextClassDate.getHours() + \":\" + makeIntoDoubleDigits(nextClassDate.getMinutes())\n\n                    const distance = nextClassDate.getTime() - now.getTime()\n                    const distanceInDays = distance / (1000 * 60 * 60 * 24)\n\n                    const isToday = 100 * (nextClassDate.getFullYear() - now.getFullYear()) +\n                        10 * (nextClassDate.getMonth() - now.getMonth()) +\n                        (nextClassDate.getDate() - now.getDate())\n\n                    if (isToday === 0) {\n\n                        returnValue = \"Your next class is today at \" + nextClassTime\n\n                    } else if (isToday === 1) {\n\n                        returnValue = \"Your next class is tomorrow at \" + nextClassTime\n\n                    } else if (distanceInDays < 7) {\n\n                        let day = nextClassDate.getDay()\n\n\n                        const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n\n                        returnValue = \"Your next class is \" + weekday[day] + \" at \" + nextClassTime\n\n                    } else {\n\n                        const nextClassDateString = nextClassDate.toLocaleDateString()\n                        const nextClassDateStringSplit = nextClassDateString.split(\"/\")\n                        const nextClassDateStringShortened = nextClassDateStringSplit[0] + \"/\" + nextClassDateStringSplit[1]\n\n                        returnValue = \"Your next class is \" + nextClassDateStringShortened + \" at \" + nextClassTime\n\n\n                    }\n\n                }\n\n                setNextClassString(returnValue)\n\n            })\n    }\n\n    getNextClass()\n\n    return (\n        <nav>\n            <button onClick={() => setShowingMenu(!showingMenu)} className=\"relative pb-4\">\n                {/* <div className=\"w-9 h-9 bg-gray-200 flex justify-center rounded-full\">\n                    <img src=\"https://css.gg/user.svg\" alt=\"\" />\n                </div> */}\n\n                <Icon image=\"user\" />\n\n            </button>\n\n            {\n                maskTransition.map(({ item, key, props }) =>\n                    item &&\n                    <animated.div\n                        className=\"top-0 left-0 fixed bg-black w-screen h-screen z-50\"\n                        style={props}\n                        key={key}\n                        onClick={dismissMenu}>\n                    </animated.div>\n                )\n            }\n\n            {\n                menuTransition.map(({ item, key, props }) =>\n                    item &&\n                    <animated.div\n                        style={props}\n                        key={key}\n                        className=\"top-0 left-0 fixed bg-gray-50 h-screen p-7 z-50 md:rounded-tr-3xl md:rounded-br-3xl justify-between overflow-auto place-content-between\">\n\n                        <div className=\"flex items-start\">\n                            <div className=\"space-y-10\">\n\n                                <Section\n                                    title=\"Your Account\"\n                                    items={[\n                                        {\n                                            title: name,\n                                            icon: \"user\"\n                                        },\n                                        {\n                                            title: decideCreditInfo(),\n                                            icon: Dollar,\n                                            link: \"/products\"\n                                        }//,\n                                        // {\n                                        //     title: nextClassString,\n                                        //     icon: \"calendar-today\"\n                                        // }\n                                    ]}\n                                />\n\n                                <Section\n                                    title=\"Quick Links\"\n                                    items={[\n                                        {\n                                            title: \"Return to Homepage\",\n                                            icon: Home,\n                                            link: \"/\"\n                                        },\n                                        {\n                                            title: \"Book a Class\",\n                                            icon: CalendarToday,\n                                            link: \"/book\"\n                                        },\n                                        {\n                                            title: \"Purchase Bundles\",\n                                            icon: ShoppingCart,\n                                            link: \"/products\"\n                                        }\n                                    ]}\n                                />\n\n                            </div>\n\n                            <button onClick={dismissMenu}>\n                                <img src={CloseIcon} alt=\"\" />\n                            </button>\n\n                        </div>\n\n                        <button\n                            className=\"font-semibold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5 mt-7\"\n                            onClick={signOut} >\n                            Sign Out\n                            </button>\n\n                    </animated.div>\n                )\n            }\n        </nav>\n    )\n\n    function Section(props) {\n\n        const title = props.title\n        const items = props.items\n\n        return (\n\n            <div className=\"space-y-7\">\n                <p className=\"text-2xl font-bold\">{title}</p>\n\n                {items.map((item, key) =>\n                    item.link ?\n\n                        <Link to={item.link} className=\"flex items-center space-x-4\" key={key} onClick={dismissMenu} >\n                            <Icon\n                                image={item.icon}\n                                isLink={true} />\n                            <p>{item.title}</p>\n                        </Link>\n\n\n                        :\n\n                        <div className=\"flex items-center space-x-4\" key={key}>\n                            <Icon image={item.icon} />\n                            <p>{item.title}</p>\n                        </div>\n\n                )}\n            </div>\n\n        )\n    }\n\n    function Icon(props) {\n\n\n        if (props.image === \"user\") {\n            return (\n\n                <div className=\"w-9 h-9 bg-gray-200 flex rounded-full\">\n                    <img src=\"https://css.gg/user.svg\" alt=\"\" className=\"w-6 h-6 mx-auto my-auto\" />\n                </div>\n            )\n\n        } else if (props.image === \"calendar-today\") {\n            return (\n                <div className=\"w-9 h-9 bg-gray-200 flex rounded-full\">\n                    <img src=\"https://css.gg/calendar-today.svg\" alt=\"\" className=\"w-6 h-6 mx-auto my-auto\" />\n                </div>\n            )\n\n        } else {\n\n            return (\n\n                <div className=\"w-9 h-9 bg-gray-200 flex rounded-full\">\n                    <img src={props.image} alt=\"\" className=\"w-6 h-6 mx-auto my-auto\" />\n                </div>\n\n\n            )\n\n        }\n\n    }\n\n}\n\nexport default Header\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailSignUp.js",["117","118"],"import React, { useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport useSubmitCredentials from \"../Hooks/EmailSubmit\"\nimport Back from \"../Images/back.svg\"\nimport {chooseSignInStepAtom} from \"../Global/atoms\"\n\nfunction EmailSignUp(props) {\n\n    const [choiceStep, setChoiceStep] = useRecoilState(chooseSignInStepAtom)\n    const [step, setStep] = useRecoilState(props.stepAtom)\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n    const submitCredentials = useSubmitCredentials(email, password, errorHandler, name)\n\n    function errorHandler(error) {\n        setError(error)\n    }\n\n    function handleKeyDown(event) {\n        if (event.key === \"Enter\") {\n            submitCredentials()\n        }\n    }\n\n    function decideAssistance() {\n        if (error !== \"\") {\n            return \"Please contact support@eastkickboxingclub.com for assistance if needed.\"\n        }\n    }\n\n    return (\n\n        <div>\n            <div className=\"space-y-10 mx-auto card\">\n                <div>\n                <button onClick = {() => setChoiceStep(0)}><img src={Back} alt=\"\"/></button>\n                    <p className=\"text-xl text-gray-900 font-bold text-center\">Sign Up</p>\n                </div>\n\n                <div className=\"space-y-6\">\n\n                    <div className=\"space-y-3\">\n                        <p className=\"text-gray-500 semibold\">Name</p>\n                        <div><input\n                            type=\"text\"\n                            className=\"rounded-full border focus:ring-2 focus:ring-blue-400 focus:outline-none focus:border-blue-300 border-gray-300 text-center w-full py-1\"\n                            onChange={event => setName(event.target.value)} /></div>\n                    </div>\n\n                    <div className=\"space-y-3\">\n                        <p className=\"text-gray-500 semibold\">Email</p>\n                        <div><input\n                            type=\"email\"\n                            className=\"rounded-full border focus:ring-2 focus:ring-blue-400 focus:outline-none focus:border-blue-300 border-gray-300 text-center w-full py-1\"\n                            onChange={event => setEmail(event.target.value)} /></div>\n                    </div>\n\n                    <div className=\"space-y-3\">\n                        <p className=\"text-gray-500 semibold\">Password</p>\n                        <div><input type=\"password\"\n                            className=\"rounded-full border focus:ring-2 focus:ring-blue-400 focus:outline-none focus:border-blue-300 border-gray-300 text-center w-full py-1\"\n                            onChange={event => setPassword(event.target.value)}\n                            onKeyDown={handleKeyDown} /></div>\n                    </div>\n\n                </div>\n\n                <div>\n                    <button onClick={submitCredentials} className=\"font-semibold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5 focus:outline-none\">Submit</button>\n                    <button onClick={() => setStep(1)} className=\"w-full focus:outline-none\">\n                        <p className=\"text-blue-500 mx-auto max-w-sm lg:max-w-md text-center mt-7 \">Already have an account? Sign In!</p>\n                    </button>\n                </div>\n\n            </div>\n\n            <p className=\"text-red-400 mx-auto max-w-sm lg:max-w-md text-center mt-7\">{error} <br />{decideAssistance()}</p>\n\n        </div>\n    )\n}\n\nexport default EmailSignUp\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Calendar.js",["119","120","121","122","123","124","125","126"],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/ClassesAvailable.js",["127"],"import {useCreateEvent } from \"../Hooks/FirebaseAdd\"\nimport {useHistory, Link} from \"react-router-dom\"\nimport BackButton from \"../Components/BackButton\"\nimport {useParams} from \"react-router-dom\"\n\n// import {bookingSelectedDayAtom} from \"../Global/atoms\"\n// import {useRecoilValue} from \"recoil\"\n\nfunction ClassesAvailable(props) {\n    \n    const account = props.account\n    const history = useHistory()\n    // const selectedDay = useRecoilValue(bookingSelectedDayAtom)\n    const { id, selectedTime } = useParams()\n    const selectedDay = new Date()\n\tselectedDay.setTime(selectedTime)\n    const createEvent = useCreateEvent(account, selectedDay)\n\n\n    const decideText = function () {\n        if (account) {\n\n            if (account.isMember) {\n                return [`You have an unlimted amount of free classes.`, \"Would you like to use one?\"]\n            } else if (account.freeClasses === 1) {\n                return [\"You have 1 free class left.\", \"Would you like to use it?\"]\n            } else {\n                return [`You have ${account.freeClasses} free classes left.`, \"Would you like to use one?\"]\n            }\n            \n        } else {\n            console.log(\"there was no account\")\n            return [\"Loading...\", \"\"]\n        }\n        \n\n    }\n\n/*TODO: to avoid error, you can simply put the contents of the component in a variable, and show the variable in the \nreturn statement. You create a default variable value which is a regular p, and then you have an if statement right here\nthat checks whther or not we have checked to see if we have available classes. if we have not, we will history.push the \nog page */\n\n// useEffect(() => {\n   \n    if(selectedDay === \"\") {\n        console.log(\"pushed cause selected day was\", selectedDay)\n        history.push(\"/book\")\n\n    } else {\n        console.log(\"we still ran the checker\")\n    }\n\n// }, [selectedDay])\n\n    return (\n\n        <div className=\"card text-left text-gray-900 space-y-4\">\n            \n            <BackButton to=\"/book\" />\n            \n            <div className=\"float-center text-center font-semibold space-y-1\">\n                <p className=\"text-l\">{decideText()[0]}</p>\n                <p className=\"text-sm\">{decideText()[1]}</p>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-x-2.5\">\n                <Link to = \"/book/payment\" className=\"border-black border-2 rounded-3xl p-0.5 text-center\">\n                <p >No</p>\n                </Link>\n                \n                {/* this needs to do all neccessary firebase things. It can be reused in the payment button */}\n\n                <button onClick = {() => createEvent(true)} className=\"bg-blue-500 text-white rounded-3xl py-0.5 text-center\">Yes</button>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default ClassesAvailable","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/EmailSignIn.js",["128","129"],"import React, { useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport useSubmitCredentials from \"../Hooks/EmailSubmit\"\nimport Back from \"../Images/back.svg\"\nimport {chooseSignInStepAtom} from \"../Global/atoms\"\n\nfunction EmailSignIn(props) {\n\n    const [choiceStep, setChoiceStep] = useRecoilState(chooseSignInStepAtom)\n    const [step, setStep] = useRecoilState(props.stepAtom)\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n\n    function errorHandler(error) {\n        setError(error)\n    }\n\n    function handleKeyDown(event) {\n        if (event.key === \"Enter\") {\n            submitCredentials()\n        }\n    }\n\n    function decideAssistance() {\n        if (error !== \"\") {\n            return \"Please contact support@eastkickboxingclub.com for assistance if needed.\"\n        }\n    }\n\n    const submitCredentials = useSubmitCredentials(email, password, errorHandler)\n\n    return (\n        <div>\n            <div className=\"space-y-10 mx-auto card\">\n                <div>\n                    <button onClick = {() => setChoiceStep(0)}><img src={Back} alt=\"\"/></button>\n                    <p className=\"text-xl text-gray-900 font-bold text-center\">Sign In</p>\n                </div>\n\n                <div className=\"space-y-6\">\n                    <div className=\"space-y-3\">\n                        <p className=\"text-gray-500 semibold\">Email</p>\n                        <div><input\n                            type=\"email\"\n                            className=\"rounded-full border focus:ring-2 focus:ring-blue-400 focus:outline-none focus:border-blue-300 border-gray-300 text-center w-full py-1\"\n                            onChange={event => setEmail(event.target.value)} /></div>\n                    </div>\n\n                    <div className=\"space-y-3\">\n                        <p className=\"text-gray-500 semibold\">Password</p>\n                        <div><input type=\"password\"\n                            className=\"rounded-full border focus:ring-2 focus:ring-blue-400 focus:outline-none focus:border-blue-300 border-gray-300 text-center w-full py-1\"\n                            onChange={event => setPassword(event.target.value)}\n                            onKeyDown={handleKeyDown} /></div>\n                    </div>\n\n                </div>\n                <div>\n                    <button onClick={submitCredentials} className=\"font-semibold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5 focus:outline-none\">Submit</button>\n                    <button onClick={() => setStep(0)} className=\"w-full focus:outline-none\">\n                        <p className=\"text-blue-500 mx-auto max-w-sm lg:max-w-md text-center mt-7 \">Don't have an account? Sign Up!</p>\n                    </button>\n                </div>\n            </div>\n\n            <p className=\"text-red-400 mx-auto max-w-sm lg:max-w-md text-center mt-7\">{error} <br />{decideAssistance()} </p>\n\n        </div>\n\n    )\n}\n\nexport default EmailSignIn","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Views/Payment.js",["130","131","132","133"],"import { loadStripe } from \"@stripe/stripe-js\"\nimport React, { useEffect } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { Elements } from \"@stripe/react-stripe-js\"\nimport CheckoutForm from \"../Components/CheckoutForm\"\n\nimport { bookingSelectedDayAtom } from \"../Global/atoms\"\nimport { useRecoilState, useRecoilValue } from \"recoil\"\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// loadStripe is initialized with your real test publishable API key.\n\n//STRIPE KEY\nconst promise = loadStripe(\n\t\"pk_live_51I2xqcGzyM7sApL2oRsoS9Oh1HR81hv8vMWeNhhynJMgE117xdWktiQ8RI7uMmryGkWZpkCNHkgfB1BQcRpeMYoM0077N1Unkl\"\n\t// \"pk_test_51I2xqcGzyM7sApL2CXUYBTFTgFzGZm5d05J2B0AxN0RGk6i0CyXkFGxnlJXMo2dOOI3ejHZyp3YEzMWOSDr01zDQ00Y27tApui\"\n)\n\nexport default function Payment(props) {\n\tconst history = useHistory()\n\tconst { id, selectedTime } = useParams()\n\tuseEffect(() => {\n\t\tif (\n\t\t\tid !== \"threepack\" &&\n\t\t\tid !== \"tenpack\" &&\n\t\t\tid !== \"fourpack\" &&\n\t\t\tid !== \"membership\"\n\t\t) {\n\t\t\tif (selectedTime) {\n\t\t\t\tconst date = new Date()\n\n\t\t\t\tdate.setTime(selectedTime)\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\thistory.push(\"/book\")\n\t\t\t\tconsole.log(\"the id wasn't there and there was no time, so i pushed!\")\n\t\t\t}\n\t\t}\n\t}, [history])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Elements stripe={promise}>\n\t\t\t\t<CheckoutForm\n\t\t\t\t\tfirestore={props.firestore}\n\t\t\t\t\tauth={props.auth}\n\t\t\t\t\taccount={props.account}\n\t\t\t\t/>\n\t\t\t</Elements>\n\t\t</div>\n\t)\n}\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/BackButton.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/FirebaseAdd.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Components/CheckoutForm.js",["134","135"],"import React, { useState, useEffect } from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport {useCreateEvent } from \"../Hooks/FirebaseAdd\"\nimport {usePaymentFunctions } from \"../Hooks/PaymentModes\"\nimport BackButton from \"./BackButton\";\nimport {useHistory, useParams} from \"react-router-dom\"\n\nexport default function CheckoutForm(props) {\n\n  const account = props.account\n  const history = useHistory()\n  const { id, selectedTime } = useParams()\n\n  let selectedTimeDate\n\n  if (selectedTime) {\n    selectedTimeDate= new Date()\n    selectedTimeDate.setTime(selectedTime)\n  }\n\n  const months = [\n\t\t\"January\",\n\t\t\"February\",\n\t\t\"March\",\n\t\t\"April\",\n\t\t\"May\",\n\t\t\"June\",\n\t\t\"July\",\n\t\t\"August\",\n\t\t\"September\",\n\t\t\"October\",\n\t\t\"November\",\n\t\t\"December\",\n\t]\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const editDatabase = useCreateEvent(account, selectedTimeDate)\n\n  console.log(\"the checkout forms selected time is \", selectedTimeDate)\n\n  const [decidePreviousStep, getProductId] = usePaymentFunctions(selectedTimeDate, account)\n\n  const serverURL = \"https://east-kickboxing-club.herokuapp.com/create-payment-intent\"\n  // const serverURL = \"http://localhost:4000/create-payment-intent\"\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(serverURL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ items: [getProductId()], customerID:  account.stripeCustomerID})\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret);\n      })\n  }, []);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message} Please contact support@eastkickboxingclub.com for assistance.`);\n      setProcessing(false);\n\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n\n      editDatabase(false)\n\n    }\n  };\n\n  function getProductInformation() {\n\n    if (selectedTimeDate) {\n      //give the info for the booking \n\n      const month = months[selectedTimeDate.getMonth()]\n      const day = selectedTimeDate.getDate()\n\n      console.log(\"our stuff is\", day, month)\n\n      return [`Class on ${month} ${day}`, \"15\"]\n      \n    } else {\n\n      switch (id) {\n\n        case \"threepack\":\n          return [\"Three Pack\", \"40\"]\n        case \"fourpack\":\n          return [\"Four Pack\", \"50\"]\n        case \"tenpack\":\n          return [\"Ten Pack\", \"130\"]\n        case \"membership\":\n          return [\"Membership\", \"180\"]\n        default:\n          return [\"Loading...\", \"\"]\n      }\n    }\n  }\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <div className=\"card space-y-5\">\n\n        <BackButton to = {decidePreviousStep()}/>\n\n\n        <p className=\"text-xl font-bold text-center\">Enter your payment details</p>\n\n        <div className=\"font-bold text-left text-gray-900 space-y-4\">\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"text-lg text-gray-400\">Item</p>\n\t\t\t\t\t\t\t\t\t<p>{getProductInformation()[0]}</p>\n\t\t\t\t\t\t\t\t</div>\n\n                <div>\n\t\t\t\t\t\t\t\t\t<p className=\"text-lg text-gray-400\">Price</p>\n\t\t\t\t\t\t\t\t\t<p>${getProductInformation()[1]}</p>\n\t\t\t\t\t\t\t\t</div>\n\n                </div>\n        \n\n        <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} className=\"py-2.5\" />\n\n        <button id=\"submit\"\n          className=\"font-semibold rounded-3xl bg-blue-500 text-center text-white w-full py-1.5\"\n          disabled={processing || disabled || succeeded} >\n\n          <span id=\"button-text\">\n\n            {processing ? (\n              <p className=\"spinner\" id=\"spinner\">Loading...</p>\n            ) : (\"Done\")}\n          </span>\n        </button>\n\n      </div>\n\n      {error && (\n        <div className=\"card-error text-red-400 mx-auto max-w-sm lg:max-w-md text-center mt-7\" role=\"alert\">\n          {error}\n        </div>\n      )}\n    </form>\n  );\n}\n\n\n\n","/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/EmailSubmit.js",[],"/Users/kendalleasterly/Documents/Web Development/EKC Scheduling ReactApp/booking-page-npm/src/Hooks/PaymentModes.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":73,"column":6,"nodeType":"142","endLine":73,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"149","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":20},{"ruleId":"144","severity":1,"message":"150","line":3,"column":26,"nodeType":"146","messageId":"147","endLine":3,"endColumn":40},{"ruleId":"144","severity":1,"message":"151","line":4,"column":25,"nodeType":"146","messageId":"147","endLine":4,"endColumn":34},{"ruleId":"144","severity":1,"message":"152","line":1,"column":15,"nodeType":"146","messageId":"147","endLine":1,"endColumn":29},{"ruleId":"144","severity":1,"message":"148","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":17},{"ruleId":"144","severity":1,"message":"153","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":9,"column":12,"nodeType":"146","messageId":"147","endLine":9,"endColumn":22},{"ruleId":"144","severity":1,"message":"155","line":10,"column":12,"nodeType":"146","messageId":"147","endLine":10,"endColumn":16},{"ruleId":"144","severity":1,"message":"156","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"150","line":7,"column":26,"nodeType":"146","messageId":"147","endLine":7,"endColumn":40},{"ruleId":"144","severity":1,"message":"157","line":17,"column":9,"nodeType":"146","messageId":"147","endLine":17,"endColumn":27},{"ruleId":"144","severity":1,"message":"158","line":21,"column":8,"nodeType":"146","messageId":"147","endLine":21,"endColumn":23},{"ruleId":"144","severity":1,"message":"159","line":39,"column":9,"nodeType":"146","messageId":"147","endLine":39,"endColumn":12},{"ruleId":"140","severity":1,"message":"160","line":88,"column":5,"nodeType":"142","endLine":88,"endColumn":24,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":231,"column":16,"nodeType":"164","messageId":"165","endLine":231,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":239,"column":16,"nodeType":"164","messageId":"165","endLine":239,"endColumn":18},{"ruleId":"144","severity":1,"message":"166","line":14,"column":13,"nodeType":"146","messageId":"147","endLine":14,"endColumn":15},{"ruleId":"144","severity":1,"message":"154","line":9,"column":12,"nodeType":"146","messageId":"147","endLine":9,"endColumn":22},{"ruleId":"144","severity":1,"message":"155","line":10,"column":12,"nodeType":"146","messageId":"147","endLine":10,"endColumn":16},{"ruleId":"144","severity":1,"message":"167","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":32},{"ruleId":"144","severity":1,"message":"152","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":24},{"ruleId":"144","severity":1,"message":"150","line":8,"column":26,"nodeType":"146","messageId":"147","endLine":8,"endColumn":40},{"ruleId":"140","severity":1,"message":"168","line":40,"column":5,"nodeType":"142","endLine":40,"endColumn":14,"suggestions":"169"},{"ruleId":"144","severity":1,"message":"170","line":15,"column":9,"nodeType":"146","messageId":"147","endLine":15,"endColumn":16},{"ruleId":"140","severity":1,"message":"171","line":72,"column":6,"nodeType":"142","endLine":72,"endColumn":8,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["175"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useHistory' is defined but never used.","'useRecoilValue' is defined but never used.","'useParams' is defined but never used.","'useRecoilState' is defined but never used.","'nextClassString' is assigned a value but never used.","'choiceStep' is assigned a value but never used.","'step' is assigned a value but never used.","'auth' is defined but never used.","'bookingSelectedDay' is assigned a value but never used.","'setSelectedTime' is assigned a value but never used.","'now' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'monthIndex'. Either include it or remove the dependency array.",["176"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'bookingSelectedDayAtom' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'selectedTime'. Either include them or remove the dependency array.",["177"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account.stripeCustomerID' and 'getProductId'. Either include them or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [history]",{"range":"187","text":"188"},"Update the dependencies array to be: [month, allClasses, monthIndex]",{"range":"189","text":"190"},"Update the dependencies array to be: [history, id, selectedTime]",{"range":"191","text":"192"},"Update the dependencies array to be: [account.stripeCustomerID, getProductId]",{"range":"193","text":"194"},[2004,2006],"[history]",[2136,2155],"[month, allClasses, monthIndex]",[1281,1290],"[history, id, selectedTime]",[1954,1956],"[account.stripeCustomerID, getProductId]"]